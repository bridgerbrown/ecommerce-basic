{"ast":null,"code":"import { getAuth, signInAnonymously } from 'firebase/auth';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, onSnapshot } from \"firebase/firestore\";\nimport { firebaseConfig } from \"./firebase.config\"; // init Firebase\n\nconst app = initializeApp(firebaseConfig); // init services\n\nexport const db = getFirestore(app);\nexport const auth = getAuth(); // get paintings\n\nexport const paintingsRef = collection(db, 'paintings'); // real time collection data\n\nexport const getPaintings = () => {\n  onSnapshot(paintingsRef, snapshot => {\n    let paintings = [];\n    snapshot.docs.forEach(doc => {\n      let prod = { ...doc.data(),\n        id: doc.id\n      };\n      paintings.push(prod);\n    });\n    return paintings;\n  });\n};\nexport const signInUser = signInAnonymously(auth);\nexport const updateProducts = (db, products) => {\n  let listPromises = products.map((prod, index) => {\n    return updateProduct(db, prod);\n  });\n  return Promise.all(listPromises);\n};\nexport const updateProduct = (db, item) => {\n  return db.collection(\"paintings\").doc(item.id).update({\n    stock: item.stock\n  });\n};","map":{"version":3,"names":["getAuth","signInAnonymously","initializeApp","getFirestore","collection","onSnapshot","firebaseConfig","app","db","auth","paintingsRef","getPaintings","snapshot","paintings","docs","forEach","doc","prod","data","id","push","signInUser","updateProducts","products","listPromises","map","index","updateProduct","Promise","all","item","update","stock"],"sources":["/Users/bridgerbrown/ecommerce-basic/src/Firebase/index.js"],"sourcesContent":["import { getAuth, signInAnonymously } from 'firebase/auth'\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, onSnapshot } from \"firebase/firestore\";\nimport { firebaseConfig } from \"./firebase.config\"\n  \n// init Firebase\nconst app = initializeApp(firebaseConfig);\n\n// init services\nexport const db = getFirestore(app);\nexport const auth = getAuth()\n\n// get paintings\nexport const paintingsRef = collection(db, 'paintings')\n\n// real time collection data\nexport const getPaintings = () => {\n  onSnapshot(paintingsRef, (snapshot) => {\n    let paintings = []  \n    snapshot.docs.forEach((doc) => {\n        let prod = {\n          ...doc.data(), id: doc.id \n        }\n        paintings.push(prod)\n      })\n      return paintings\n  })\n}\n\n\nexport const signInUser = signInAnonymously(auth)\n\n\nexport const updateProducts = (db, products) => {\n  let listPromises = products.map((prod, index) => {\n    return updateProduct(db, prod);\n  });\n\n  return Promise.all(listPromises);\n};\n\nexport const updateProduct = (db, item) => {\n  return db.collection(\"paintings\").doc(item.id).update({\n    stock: item.stock,\n  });\n};"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,iBAAlB,QAA2C,eAA3C;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,QAAqD,oBAArD;AACA,SAASC,cAAT,QAA+B,mBAA/B,C,CAEA;;AACA,MAAMC,GAAG,GAAGL,aAAa,CAACI,cAAD,CAAzB,C,CAEA;;AACA,OAAO,MAAME,EAAE,GAAGL,YAAY,CAACI,GAAD,CAAvB;AACP,OAAO,MAAME,IAAI,GAAGT,OAAO,EAApB,C,CAEP;;AACA,OAAO,MAAMU,YAAY,GAAGN,UAAU,CAACI,EAAD,EAAK,WAAL,CAA/B,C,CAEP;;AACA,OAAO,MAAMG,YAAY,GAAG,MAAM;EAChCN,UAAU,CAACK,YAAD,EAAgBE,QAAD,IAAc;IACrC,IAAIC,SAAS,GAAG,EAAhB;IACAD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAuBC,GAAD,IAAS;MAC3B,IAAIC,IAAI,GAAG,EACT,GAAGD,GAAG,CAACE,IAAJ,EADM;QACMC,EAAE,EAAEH,GAAG,CAACG;MADd,CAAX;MAGAN,SAAS,CAACO,IAAV,CAAeH,IAAf;IACD,CALH;IAME,OAAOJ,SAAP;EACH,CATS,CAAV;AAUD,CAXM;AAcP,OAAO,MAAMQ,UAAU,GAAGpB,iBAAiB,CAACQ,IAAD,CAApC;AAGP,OAAO,MAAMa,cAAc,GAAG,CAACd,EAAD,EAAKe,QAAL,KAAkB;EAC9C,IAAIC,YAAY,GAAGD,QAAQ,CAACE,GAAT,CAAa,CAACR,IAAD,EAAOS,KAAP,KAAiB;IAC/C,OAAOC,aAAa,CAACnB,EAAD,EAAKS,IAAL,CAApB;EACD,CAFkB,CAAnB;EAIA,OAAOW,OAAO,CAACC,GAAR,CAAYL,YAAZ,CAAP;AACD,CANM;AAQP,OAAO,MAAMG,aAAa,GAAG,CAACnB,EAAD,EAAKsB,IAAL,KAAc;EACzC,OAAOtB,EAAE,CAACJ,UAAH,CAAc,WAAd,EAA2BY,GAA3B,CAA+Bc,IAAI,CAACX,EAApC,EAAwCY,MAAxC,CAA+C;IACpDC,KAAK,EAAEF,IAAI,CAACE;EADwC,CAA/C,CAAP;AAGD,CAJM"},"metadata":{},"sourceType":"module"}