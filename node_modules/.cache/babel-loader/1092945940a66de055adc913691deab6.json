{"ast":null,"code":"import { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, onSnapshot, setDoc, doc } from \"firebase/firestore\";\nimport { firebaseConfig } from \"./firebase.config\";\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const paintingsRef = collection(db, 'paintings');\nlet paintings = [];\nonSnapshot(paintingsRef, snapshot => {\n  snapshot.docs.forEach(doc => {\n    paintings.push({ ...doc.data(),\n      id: doc.id\n    });\n  });\n  console.log(paintings);\n  return paintings;\n});\nexport const paintingsData = paintings;\nexport const auth = getAuth();\nexport const signInUser = signInAnonymously(auth);\nexport const updateProducts = (db, products) => {\n  let listPromises = products.map((prod, index) => {\n    return updateProduct(db, prod);\n  });\n  return Promise.all(listPromises);\n};\nexport const updateProduct = item => {\n  setDoc(doc(db, \"paintings\", item), {\n    stock: item.stock\n  });\n};","map":{"version":3,"names":["getAuth","signInAnonymously","onAuthStateChanged","initializeApp","getFirestore","collection","onSnapshot","setDoc","doc","firebaseConfig","app","db","paintingsRef","paintings","snapshot","docs","forEach","push","data","id","console","log","paintingsData","auth","signInUser","updateProducts","products","listPromises","map","prod","index","updateProduct","Promise","all","item","stock"],"sources":["/Users/bridgerbrown/ecommerce-basic/src/Firebase/index.js"],"sourcesContent":["import { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth'\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, onSnapshot, setDoc, doc } from \"firebase/firestore\";\nimport { firebaseConfig } from \"./firebase.config\"\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const paintingsRef = collection(db, 'paintings')\n\nlet paintings = []\nonSnapshot(paintingsRef, (snapshot) => {\n    snapshot.docs.forEach((doc) => {\n      paintings.push({ ...doc.data(), id: doc.id })\n    })\n    console.log(paintings)\n    return paintings\n  })\n\nexport const paintingsData = paintings\n\nexport const auth = getAuth()\n  export const signInUser = signInAnonymously(auth)\n\nexport const updateProducts = (db, products) => {\n  let listPromises = products.map((prod, index) => {\n    return updateProduct(db, prod);\n  });\n\n  return Promise.all(listPromises);\n};\n\nexport const updateProduct = (item) => {\n  setDoc(doc(db, \"paintings\", item), {\n    stock: item.stock\n  });\n};"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,iBAAlB,EAAqCC,kBAArC,QAA+D,eAA/D;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,MAA/C,EAAuDC,GAAvD,QAAkE,oBAAlE;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,MAAMC,GAAG,GAAGP,aAAa,CAACM,cAAD,CAAzB;AACA,OAAO,MAAME,EAAE,GAAGP,YAAY,CAACM,GAAD,CAAvB;AACP,OAAO,MAAME,YAAY,GAAGP,UAAU,CAACM,EAAD,EAAK,WAAL,CAA/B;AAEP,IAAIE,SAAS,GAAG,EAAhB;AACAP,UAAU,CAACM,YAAD,EAAgBE,QAAD,IAAc;EACnCA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAuBR,GAAD,IAAS;IAC7BK,SAAS,CAACI,IAAV,CAAe,EAAE,GAAGT,GAAG,CAACU,IAAJ,EAAL;MAAiBC,EAAE,EAAEX,GAAG,CAACW;IAAzB,CAAf;EACD,CAFD;EAGAC,OAAO,CAACC,GAAR,CAAYR,SAAZ;EACA,OAAOA,SAAP;AACD,CANO,CAAV;AAQA,OAAO,MAAMS,aAAa,GAAGT,SAAtB;AAEP,OAAO,MAAMU,IAAI,GAAGvB,OAAO,EAApB;AACL,OAAO,MAAMwB,UAAU,GAAGvB,iBAAiB,CAACsB,IAAD,CAApC;AAET,OAAO,MAAME,cAAc,GAAG,CAACd,EAAD,EAAKe,QAAL,KAAkB;EAC9C,IAAIC,YAAY,GAAGD,QAAQ,CAACE,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;IAC/C,OAAOC,aAAa,CAACpB,EAAD,EAAKkB,IAAL,CAApB;EACD,CAFkB,CAAnB;EAIA,OAAOG,OAAO,CAACC,GAAR,CAAYN,YAAZ,CAAP;AACD,CANM;AAQP,OAAO,MAAMI,aAAa,GAAIG,IAAD,IAAU;EACrC3B,MAAM,CAACC,GAAG,CAACG,EAAD,EAAK,WAAL,EAAkBuB,IAAlB,CAAJ,EAA6B;IACjCC,KAAK,EAAED,IAAI,CAACC;EADqB,CAA7B,CAAN;AAGD,CAJM"},"metadata":{},"sourceType":"module"}