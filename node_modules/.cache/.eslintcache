[{"/Users/bridgerbrown/ecommerce-basic/src/index.js":"1","/Users/bridgerbrown/ecommerce-basic/src/App.js":"2","/Users/bridgerbrown/ecommerce-basic/src/reportWebVitals.js":"3","/Users/bridgerbrown/ecommerce-basic/src/Context.js":"4","/Users/bridgerbrown/ecommerce-basic/src/components/Cart.js":"5","/Users/bridgerbrown/ecommerce-basic/src/components/Login.js":"6","/Users/bridgerbrown/ecommerce-basic/src/components/AddProduct.js":"7","/Users/bridgerbrown/ecommerce-basic/src/components/ProductList.js":"8","/Users/bridgerbrown/ecommerce-basic/src/withContext.js":"9","/Users/bridgerbrown/ecommerce-basic/src/components/ProductItem.js":"10","/Users/bridgerbrown/ecommerce-basic/src/components/CartItem.js":"11","/Users/bridgerbrown/ecommerce-basic/src/Firebase/index.js":"12","/Users/bridgerbrown/ecommerce-basic/src/Firebase/firebase.config.js":"13","/Users/bridgerbrown/ecommerce-basic/src/components/ProductDetails.js":"14","/Users/bridgerbrown/ecommerce-basic/src/components/About.js":"15","/Users/bridgerbrown/ecommerce-basic/src/components/User.js":"16"},{"size":514,"mtime":1666266374000,"results":"17","hashOfConfig":"18"},{"size":8442,"mtime":1667423944126,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1666266374000,"results":"20","hashOfConfig":"18"},{"size":88,"mtime":1666266374000,"results":"21","hashOfConfig":"18"},{"size":1999,"mtime":1667423419576,"results":"22","hashOfConfig":"18"},{"size":2594,"mtime":1667421236058,"results":"23","hashOfConfig":"18"},{"size":5326,"mtime":1666266374000,"results":"24","hashOfConfig":"18"},{"size":1101,"mtime":1667338951631,"results":"25","hashOfConfig":"18"},{"size":355,"mtime":1666266374000,"results":"26","hashOfConfig":"18"},{"size":2804,"mtime":1669497009927,"results":"27","hashOfConfig":"18"},{"size":1784,"mtime":1667350519294,"results":"28","hashOfConfig":"18"},{"size":1078,"mtime":1667076030228,"results":"29","hashOfConfig":"18"},{"size":317,"mtime":1666266374000,"results":"30","hashOfConfig":"18"},{"size":3258,"mtime":1666990343098,"results":"31","hashOfConfig":"18"},{"size":1213,"mtime":1669930651787,"results":"32","hashOfConfig":"18"},{"size":931,"mtime":1667420732881,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1ncygdp",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/bridgerbrown/ecommerce-basic/src/index.js",[],[],[],"/Users/bridgerbrown/ecommerce-basic/src/App.js",["86","87","88","89","90","91"],[],"import './App.css';\nimport React, { Component } from 'react';\nimport { Route, Routes, NavLink, BrowserRouter as Router } from \"react-router-dom\"\nimport AddProduct from './components/AddProduct';\nimport Cart from './components/Cart';\nimport Login from './components/Login';\nimport About from './components/About'\nimport ProductList from './components/ProductList';\nimport User from './components/User';\nimport Context from \"./Context\"\nimport { signInUser, paintingsData, auth, updateProducts, db, updateItem, authChange } from './Firebase';\nimport ProductItem from './components/ProductItem';\nimport ProductDetails from './components/ProductDetails'\nimport { getIdToken, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: null,\n      usertoken: [],\n      cart: [],\n      products: [],\n      total: 0,\n      numberOfItems: 0,\n      loaded: false,  \n      value: '',\n      loggedIn: false\n    }\n    this.routerRef = React.createRef()\n  }\n\n  async componentDidMount() {\n    let user = null\n    let cart = []\n    let total = 0\n    let numberOfItems = 0\n    let loggedIn = false\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n\n    const products = paintingsData\n\n    this.setState({ user, cart, total, numberOfItems, loggedIn })\n    setTimeout(() => {\n      this.setState({products: products})\n    }, 2000);\n  }\n\n  login = async (username) => {\n    signInAnonymously(auth)\n    authChange(username)\n    onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        const token = await getIdToken(user)\n        this.setState({ usertoken: this.state.usertoken + token})\n      }\n    })\n    this.setState({ user: username, loggedIn: true })\n    console.log(this.state.usertoken)\n  }\n\n  logout = e => {\n    e.preventDefault()\n    this.setState({ user: null, usertoken: null, loggedIn: false })\n  }\n\n   addToCart = (product) => {\n    setTimeout(() => {\n      let newCart = [];\n      let updatedProducts = [];\n\n      /* Check Stock */\n      let indexProd = this.state.products.findIndex((prod) => {\n        return prod.id === product.id;\n      });\n\n      let correctNumber = product.price.replace(/,/g,'').replace(/\\$/g,'')\n      let newTotal = Number(this.state.total) + Number(correctNumber)\n\n      if (this.state.products[indexProd].stock > 0) {\n        let indexCart = this.state.cart.findIndex((item) => {\n          return item.id === product.id;\n        });\n\n        /* Add product to cart */\n        if (indexCart === -1) {\n          /*New item */\n          this.setState({\n            cart: this.state.cart.concat([\n              {\n                id: product.id,\n                title: product.title,\n                img: product.img,\n                link: product.link,\n                description: product.description,\n                medium: product.medium,\n                artist: product.artist,\n                quantity: 1,\n                price: product.price\n              },\n            ]),\n            total: newTotal\n          });\n        } else {\n          /* Existing item */\n          newCart = this.state.cart;\n          newCart[indexCart].quantity = newCart[indexCart].quantity + 1;\n\n          this.setState({\n            cart: newCart,\n            total: newTotal\n          });\n        }\n\n        /* Update Stock */\n        updatedProducts = this.state.products;\n\n        updatedProducts[indexProd].stock--;\n\n        this.setState({ products: updatedProducts, total: newTotal, numberOfItems: this.state.numberOfItems + 1 });\n      }\n    }, 100);\n  };\n\n  removeFromCart = (id, quantity) => {\n    setTimeout(() => {\n      let newCart = this.state.cart;\n\n      /* Delete item */\n      this.setState({ cart: newCart.filter((item) => item.id !== id) });\n\n      let indexProd = this.state.products.findIndex((prod) => {\n        return prod.id === id;\n      });\n\n      let updatedProducts = this.state.products;\n\n      updatedProducts[indexProd].stock =\n        updatedProducts[indexProd].stock + parseInt(quantity);\n\n      this.setState({ products: updatedProducts });\n    }, 100);\n  };\n\n  checkout = () => {\n    const cart = this.state.cart;\n    const products = this.state.products\n\n    if (cart.length !== 0) {\n          console.log(\"Successful items update\");\n          this.setState({ cart: [], total: 0, numberOfItems: 0 });\n          alert(\"Cart Ordered!!!\");\n    }\n  };\n\n  checkbox = () => {\n    const totalAmount = document.getElementById(\"total-amount\")\n    const freeText = document.getElementById(\"free\")\n    const checkbtn = document.querySelector(\"input\");\n    checkbtn.addEventListener('click', function() {\n        if (checkbtn.checked) {\n            totalAmount.classList.add(\"crossout\")\n            freeText.style.display = \"inherit\"\n        } else {\n            totalAmount.classList.remove(\"crossout\")\n            freeText.style.display = \"none\"\n        }\n    })\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    this.setState({ user: this.state.value })\n  }\n\nrender() {\n  return (\n  <Context.Provider\n    value={{\n      ...this.state,\n      removeFromCart: this.removeFromCart,\n      addToCart: this.addToCart,\n      login: this.login,\n      checkout: this.checkout,\n      checkbox: this.checkbox,\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange\n    }}\n  >\n    <Router ref={this.routerRef}>\n      <div className='App'>\n        <nav\n          className='navbar container'\n          role='navigation'\n          aria-label='main navigation'\n        >\n        <div className='navbar-brand'>\n          <b>eCommerce Paintings</b>\n          <label\n            role='button'\n            class='navbar-burger burger'\n            aria-label='menu'\n            aria-expanded='false'\n            data-target='navbarBasicExample'\n            onClick={e => {\n              e.preventDefault()\n              this.setState({ showMenu: !this.state.showMenu })\n            }}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </label>\n        </div>\n            <div className=\"navbar-menu\">\n              <NavLink to=\"/products\" className={({ isActive }) => \n                      (isActive ? \"active-nav navbar-item\" : \"navbar-item\")}>\n                Products\n              </NavLink>\n              <NavLink to=\"/cart\" className={({ isActive }) => \n                      (isActive ? \"active-nav navbar-item\" : \"navbar-item\")}\n                      id=\"cartnav\">\n                Cart ({ Object.keys(this.state.cart).length })\n              </NavLink>\n              <NavLink to=\"/about\" className={({ isActive }) => \n                      (isActive ? \"active-nav navbar-item\" : \"navbar-item\")}>\n                About\n              </NavLink>\n             {this.state.loggedIn ? (<NavLink to=\"/user\" className={({ isActive }) => \n                      (isActive ? \"active-nav navbar-item\" : \"navbar-item\")}>\n                 <img src='../assets/user.png' alt='user icon' id='usericon'/>\n                 {this.state.user}\n              </NavLink>) : <div></div>}\n              {!this.state.user ? (\n                <NavLink to=\"/login\" className={({ isActive }) => \n                      (isActive ? \"active-nav navbar-item\" : \"navbar-item\")\n                      }>\n                  Login\n                </NavLink>\n              ) : (\n                <NavLink to=\"/\" onClick={this.logout} className={({ isActive }) => \n                      (isActive ? \"navbar-item\" : \"navbar-item\")}>\n                  Logout\n                </NavLink>\n              )}\n            </div>\n          </nav>\n          <Routes>\n            <Route exact path=\"/\" element={<ProductList />} />\n            <Route exact path=\"/login\" element={<Login />} />\n            <Route exact path=\"/user\" element={<User />} />\n            <Route exact path=\"/cart\" element={<Cart />} />\n            <Route exact path=\"/about\" element={<About />} />\n            <Route exact path=\"/add-product\" element={<AddProduct />} />\n            <Route exact path=\"/products\" element={<ProductList />} />\n            <Route path=\"/:title\" element={<ProductDetails />} />\n          </Routes>\n        </div>\n      </Router>\n    </Context.Provider>\n    );\n  }\n}\n","/Users/bridgerbrown/ecommerce-basic/src/reportWebVitals.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/Context.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/Cart.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/Login.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/AddProduct.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/ProductList.js",["92"],[],"import React, { useEffect } from \"react\";\nimport ProductItem from \"./ProductItem\"\nimport withContext from \"../withContext\";\n\nconst ProductList = props => {\n    const { products } = props.context\n\n    return(\n        <>\n        <div className=\"title-container\">\n            <h4 className=\"page-title\">Products</h4>\n        </div>\n        <br />\n        <div className=\"container\">\n            <div className=\"painting-list\">\n                {products && products.length ? (\n                    products.map((product, index) => (\n                        <ProductItem\n                            product={product}\n                            key={index}\n                            addToCart={props.context.addToCart}\n                        />\n                    ))\n                ) : (\n                    <div className=\"loading-container\">\n                        <span className=\"loading\">\n                            Loading...\n                        </span>\n                    </div>\n                )}\n            </div>\n        </div>\n    </>\n    )\n}\n\nexport default withContext(ProductList)","/Users/bridgerbrown/ecommerce-basic/src/withContext.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/ProductItem.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/CartItem.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/Firebase/index.js",["93"],[],"import { getAuth, getIdToken, onAuthStateChanged } from 'firebase/auth'\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, onSnapshot, updateDoc, doc } from \"firebase/firestore\";\nimport { firebaseConfig } from \"./firebase.config\"\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const paintingsRef = collection(db, 'paintings')\n\nlet paintings = []\nonSnapshot(paintingsRef, (snapshot) => {\n    snapshot.docs.forEach((doc) => {\n      paintings.push({ ...doc.data(), id: doc.id })\n    })\n    console.log(paintings)\n    return paintings\n  })\n\nexport const paintingsData = paintings\n\nexport const auth = getAuth()\n\nexport function authChange(username) {\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      user.displayName = username\n      console.log(\"signed in\")\n      console.log(\"User uid = \" + user.uid)\n    }\n    else {\n      console.log(\"signed out\")\n    }\n  })\n}\nexport const updateItem = (item) => {\n  const itemRef = doc(db, \"paintings\", item)\n  updateDoc(itemRef, {\n    stock: item.stock\n  })\n}","/Users/bridgerbrown/ecommerce-basic/src/Firebase/firebase.config.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/ProductDetails.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/About.js",[],[],"/Users/bridgerbrown/ecommerce-basic/src/components/User.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":11,"column":10,"nodeType":"96","messageId":"97","endLine":11,"endColumn":20},{"ruleId":"94","severity":1,"message":"98","line":11,"column":43,"nodeType":"96","messageId":"97","endLine":11,"endColumn":57},{"ruleId":"94","severity":1,"message":"99","line":11,"column":59,"nodeType":"96","messageId":"97","endLine":11,"endColumn":61},{"ruleId":"94","severity":1,"message":"100","line":11,"column":63,"nodeType":"96","messageId":"97","endLine":11,"endColumn":73},{"ruleId":"94","severity":1,"message":"101","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":19},{"ruleId":"94","severity":1,"message":"102","line":148,"column":11,"nodeType":"96","messageId":"97","endLine":148,"endColumn":19},{"ruleId":"94","severity":1,"message":"103","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"104","line":1,"column":19,"nodeType":"96","messageId":"97","endLine":1,"endColumn":29},"no-unused-vars","'signInUser' is defined but never used.","Identifier","unusedVar","'updateProducts' is defined but never used.","'db' is defined but never used.","'updateItem' is defined but never used.","'ProductItem' is defined but never used.","'products' is assigned a value but never used.","'useEffect' is defined but never used.","'getIdToken' is defined but never used."]